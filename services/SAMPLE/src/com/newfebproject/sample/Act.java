/*Copyright (c) 2015-2016 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.newfebproject.sample;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * Act generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`ACT`", uniqueConstraints = {
        @UniqueConstraint(columnNames = {"`ACTNO`", "`ACTKWD`"})})
public class Act implements Serializable {

    private Short actno;
    private String actkwd;
    private String actdesc;
    private Act actByActno;
    private Act actForActno;

    @Id
    @GenericGenerator(name = "generator", strategy = "foreign", 
            parameters = @Parameter(name = "property", value = "actByActno"))
    @GeneratedValue(generator = "generator")
    @Column(name = "`ACTNO`", nullable = false, insertable = false, updatable = false, scale = 0, precision = 5)
    public Short getActno() {
        return this.actno;
    }

    public void setActno(Short actno) {
        this.actno = actno;
    }

    @Column(name = "`ACTKWD`", nullable = false, length = 6)
    public String getActkwd() {
        return this.actkwd;
    }

    public void setActkwd(String actkwd) {
        this.actkwd = actkwd;
    }

    @Column(name = "`ACTDESC`", nullable = false, length = 20)
    public String getActdesc() {
        return this.actdesc;
    }

    public void setActdesc(String actdesc) {
        this.actdesc = actdesc;
    }

    // ignoring self relation properties to avoid circular loops.
    @JsonIgnoreProperties({"actByActno", "actForActno"})
    @OneToOne(fetch = FetchType.EAGER)
    @PrimaryKeyJoinColumn
    public Act getActByActno() {
        return this.actByActno;
    }

    public void setActByActno(Act actByActno) {
        if(actByActno != null) {
            this.actno = actByActno.getActno();
        }

        this.actByActno = actByActno;
    }

    // ignoring self relation properties to avoid circular loops.
    @JsonIgnoreProperties({"actByActno", "actForActno"})
    @OneToOne(fetch = FetchType.EAGER, mappedBy = "actByActno")
    public Act getActForActno() {
        return this.actForActno;
    }

    public void setActForActno(Act actForActno) {
        this.actForActno = actForActno;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Act)) return false;
        final Act act = (Act) o;
        return Objects.equals(getActno(), act.getActno());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getActno());
    }
}


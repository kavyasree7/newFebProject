/*Copyright (c) 2015-2016 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.newfebproject.sample;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.math.BigInteger;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

/**
 * Customer generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`CUSTOMER`", uniqueConstraints = {
        @UniqueConstraint(columnNames = {"`INFO`"})})
public class Customer implements Serializable {

    private BigInteger cid;
    @JsonProperty(access = Access.READ_ONLY)
    private byte[] info;
    @JsonProperty(access = Access.READ_ONLY)
    private byte[] history;
    private List<Purchaseorder> purchaseorders;

    @Id
    @Column(name = "`CID`", nullable = false, scale = 0, precision = 20)
    public BigInteger getCid() {
        return this.cid;
    }

    public void setCid(BigInteger cid) {
        this.cid = cid;
    }

    @Column(name = "`INFO`", nullable = true)
    public byte[] getInfo() {
        return this.info;
    }

    public void setInfo(byte[] info) {
        this.info = info;
    }

    @Column(name = "`HISTORY`", nullable = true)
    public byte[] getHistory() {
        return this.history;
    }

    public void setHistory(byte[] history) {
        this.history = history;
    }

    @JsonInclude(Include.NON_EMPTY)
    
    public List<Purchaseorder> getPurchaseorders() {
        return this.purchaseorders;
    }

    public void setPurchaseorders(List<Purchaseorder> purchaseorders) {
        this.purchaseorders = purchaseorders;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Customer)) return false;
        final Customer customer = (Customer) o;
        return Objects.equals(getCid(), customer.getCid());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getCid());
    }
}


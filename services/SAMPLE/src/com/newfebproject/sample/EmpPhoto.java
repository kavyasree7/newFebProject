/*Copyright (c) 2015-2016 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.newfebproject.sample;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

/**
 * EmpPhoto generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`EMP_PHOTO`")
@IdClass(EmpPhotoId.class)
public class EmpPhoto implements Serializable {

    private String empno;
    private String photoFormat;
    @JsonProperty(access = Access.READ_ONLY)
    private byte[] picture;
    private Employee employee;

    @Id
    @Column(name = "`EMPNO`", nullable = false, length = 6)
    public String getEmpno() {
        return this.empno;
    }

    public void setEmpno(String empno) {
        this.empno = empno;
    }

    @Id
    @Column(name = "`PHOTO_FORMAT`", nullable = false, length = 10)
    public String getPhotoFormat() {
        return this.photoFormat;
    }

    public void setPhotoFormat(String photoFormat) {
        this.photoFormat = photoFormat;
    }

    @Column(name = "`PICTURE`", nullable = true)
    public byte[] getPicture() {
        return this.picture;
    }

    public void setPicture(byte[] picture) {
        this.picture = picture;
    }

    
    
    public Employee getEmployee() {
        return this.employee;
    }

    public void setEmployee(Employee employee) {
        if(employee != null) {
            this.empno = employee.getEmpno();
        }

        this.employee = employee;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof EmpPhoto)) return false;
        final EmpPhoto empPhoto = (EmpPhoto) o;
        return Objects.equals(getEmpno(), empPhoto.getEmpno()) &&
                Objects.equals(getPhotoFormat(), empPhoto.getPhotoFormat());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getEmpno(),
                getPhotoFormat());
    }
}


/*Copyright (c) 2015-2016 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.newfebproject.wmstudio;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;

/**
 * CompO2oC generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`COMP O2O C`")
@IdClass(CompO2oPId.class)
public class CompO2oC implements Serializable {

    private Integer id;
    private String column2;
    private String short_;
    private CompO2oP compO2oP;

    @Id
    @Column(name = "`ID `", nullable = false, insertable = false, updatable = false, scale = 0, precision = 32)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Id
    @Column(name = "`STRING`", nullable = false, insertable = false, updatable = false, length = 50)
    public String getColumn2() {
        return this.column2;
    }

    public void setColumn2(String column2) {
        this.column2 = column2;
    }

    @Column(name = "`SHORT`", nullable = false, length = 20)
    public String getShort_() {
        return this.short_;
    }

    public void setShort_(String short_) {
        this.short_ = short_;
    }

    @OneToOne(fetch = FetchType.EAGER)
    @PrimaryKeyJoinColumn
    public CompO2oP getCompO2oP() {
        return this.compO2oP;
    }

    public void setCompO2oP(CompO2oP compO2oP) {
        if(compO2oP != null) {
            this.id = compO2oP.getId();
            this.column2 = compO2oP.getColumn2();
        }

        this.compO2oP = compO2oP;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CompO2oC)) return false;
        final CompO2oC compO2oC = (CompO2oC) o;
        return Objects.equals(getId(), compO2oC.getId()) &&
                Objects.equals(getColumn2(), compO2oC.getColumn2());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId(),
                getColumn2());
    }
}


/*Copyright (c) 2015-2016 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.newfebproject.wmstudio;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.Table;

/**
 * EmpDetailsView generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`EMP_DETAILS_VIEW`")
@IdClass(EmpDetailsViewId.class)
public class EmpDetailsView implements Serializable {

    private Integer employeeId;
    private String jobId;
    private Integer managerId;
    private Short departmentId;
    private Short locationId;
    private String countryId;
    private String firstName;
    private String lastName;
    private Float salary;
    private Float commissionPct;
    private String departmentName;
    private String jobTitle;
    private String city;
    private String stateProvince;
    private String countryName;
    private String regionName;

    @Id
    @Column(name = "`EMPLOYEE_ID`", nullable = false, scale = 0, precision = 6)
    public Integer getEmployeeId() {
        return this.employeeId;
    }

    public void setEmployeeId(Integer employeeId) {
        this.employeeId = employeeId;
    }

    @Id
    @Column(name = "`JOB_ID`", nullable = false, length = 10)
    public String getJobId() {
        return this.jobId;
    }

    public void setJobId(String jobId) {
        this.jobId = jobId;
    }

    @Id
    @Column(name = "`MANAGER_ID`", nullable = true, scale = 0, precision = 6)
    public Integer getManagerId() {
        return this.managerId;
    }

    public void setManagerId(Integer managerId) {
        this.managerId = managerId;
    }

    @Id
    @Column(name = "`DEPARTMENT_ID`", nullable = true, scale = 0, precision = 4)
    public Short getDepartmentId() {
        return this.departmentId;
    }

    public void setDepartmentId(Short departmentId) {
        this.departmentId = departmentId;
    }

    @Id
    @Column(name = "`LOCATION_ID`", nullable = true, scale = 0, precision = 4)
    public Short getLocationId() {
        return this.locationId;
    }

    public void setLocationId(Short locationId) {
        this.locationId = locationId;
    }

    @Id
    @Column(name = "`COUNTRY_ID`", nullable = true, length = 2)
    public String getCountryId() {
        return this.countryId;
    }

    public void setCountryId(String countryId) {
        this.countryId = countryId;
    }

    @Id
    @Column(name = "`FIRST_NAME`", nullable = true, length = 20)
    public String getFirstName() {
        return this.firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    @Id
    @Column(name = "`LAST_NAME`", nullable = false, length = 25)
    public String getLastName() {
        return this.lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    @Id
    @Column(name = "`SALARY`", nullable = true, scale = 2, precision = 8)
    public Float getSalary() {
        return this.salary;
    }

    public void setSalary(Float salary) {
        this.salary = salary;
    }

    @Id
    @Column(name = "`COMMISSION_PCT`", nullable = true, scale = 2, precision = 2)
    public Float getCommissionPct() {
        return this.commissionPct;
    }

    public void setCommissionPct(Float commissionPct) {
        this.commissionPct = commissionPct;
    }

    @Id
    @Column(name = "`DEPARTMENT_NAME`", nullable = false, length = 30)
    public String getDepartmentName() {
        return this.departmentName;
    }

    public void setDepartmentName(String departmentName) {
        this.departmentName = departmentName;
    }

    @Id
    @Column(name = "`JOB_TITLE`", nullable = false, length = 35)
    public String getJobTitle() {
        return this.jobTitle;
    }

    public void setJobTitle(String jobTitle) {
        this.jobTitle = jobTitle;
    }

    @Id
    @Column(name = "`CITY`", nullable = false, length = 30)
    public String getCity() {
        return this.city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    @Id
    @Column(name = "`STATE_PROVINCE`", nullable = true, length = 25)
    public String getStateProvince() {
        return this.stateProvince;
    }

    public void setStateProvince(String stateProvince) {
        this.stateProvince = stateProvince;
    }

    @Id
    @Column(name = "`COUNTRY_NAME`", nullable = true, length = 40)
    public String getCountryName() {
        return this.countryName;
    }

    public void setCountryName(String countryName) {
        this.countryName = countryName;
    }

    @Id
    @Column(name = "`REGION_NAME`", nullable = true, length = 25)
    public String getRegionName() {
        return this.regionName;
    }

    public void setRegionName(String regionName) {
        this.regionName = regionName;
    }



    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof EmpDetailsView)) return false;
        final EmpDetailsView empDetailsView = (EmpDetailsView) o;
        return Objects.equals(getEmployeeId(), empDetailsView.getEmployeeId()) &&
                Objects.equals(getJobId(), empDetailsView.getJobId()) &&
                Objects.equals(getManagerId(), empDetailsView.getManagerId()) &&
                Objects.equals(getDepartmentId(), empDetailsView.getDepartmentId()) &&
                Objects.equals(getLocationId(), empDetailsView.getLocationId()) &&
                Objects.equals(getCountryId(), empDetailsView.getCountryId()) &&
                Objects.equals(getFirstName(), empDetailsView.getFirstName()) &&
                Objects.equals(getLastName(), empDetailsView.getLastName()) &&
                Objects.equals(getSalary(), empDetailsView.getSalary()) &&
                Objects.equals(getCommissionPct(), empDetailsView.getCommissionPct()) &&
                Objects.equals(getDepartmentName(), empDetailsView.getDepartmentName()) &&
                Objects.equals(getJobTitle(), empDetailsView.getJobTitle()) &&
                Objects.equals(getCity(), empDetailsView.getCity()) &&
                Objects.equals(getStateProvince(), empDetailsView.getStateProvince()) &&
                Objects.equals(getCountryName(), empDetailsView.getCountryName()) &&
                Objects.equals(getRegionName(), empDetailsView.getRegionName());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getEmployeeId(),
                getJobId(),
                getManagerId(),
                getDepartmentId(),
                getLocationId(),
                getCountryId(),
                getFirstName(),
                getLastName(),
                getSalary(),
                getCommissionPct(),
                getDepartmentName(),
                getJobTitle(),
                getCity(),
                getStateProvince(),
                getCountryName(),
                getRegionName());
    }
}


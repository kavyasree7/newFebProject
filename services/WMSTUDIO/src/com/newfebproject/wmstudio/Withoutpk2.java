/*Copyright (c) 2015-2016 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.newfebproject.wmstudio;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.Table;

import org.hibernate.annotations.Type;
import org.joda.time.LocalDateTime;

/**
 * Withoutpk2 generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`WITHOUTPK2`")
@IdClass(Withoutpk2Id.class)
public class Withoutpk2 implements Serializable {

    private String id;
    private String string;
    private Short short_;
    @Type(type = "DateTime")
    private LocalDateTime dateCol;

    @Id
    @Column(name = "`ID`", nullable = true, length = 20)
    public String getId() {
        return this.id;
    }

    public void setId(String id) {
        this.id = id;
    }

    @Id
    @Column(name = "`STRING`", nullable = true, length = 50)
    public String getString() {
        return this.string;
    }

    public void setString(String string) {
        this.string = string;
    }

    @Id
    @Column(name = "`SHORT`", nullable = true, scale = 0, precision = 3)
    public Short getShort_() {
        return this.short_;
    }

    public void setShort_(Short short_) {
        this.short_ = short_;
    }

    @Id
    @Column(name = "`DATE COL`", nullable = true)
    public LocalDateTime getDateCol() {
        return this.dateCol;
    }

    public void setDateCol(LocalDateTime dateCol) {
        this.dateCol = dateCol;
    }



    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Withoutpk2)) return false;
        final Withoutpk2 withoutpk2 = (Withoutpk2) o;
        return Objects.equals(getId(), withoutpk2.getId()) &&
                Objects.equals(getString(), withoutpk2.getString()) &&
                Objects.equals(getShort_(), withoutpk2.getShort_()) &&
                Objects.equals(getDateCol(), withoutpk2.getDateCol());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId(),
                getString(),
                getShort_(),
                getDateCol());
    }
}


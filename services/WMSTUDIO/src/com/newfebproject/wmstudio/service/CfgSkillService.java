/*Copyright (c) 2015-2016 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.newfebproject.wmstudio.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.util.Map;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.model.AggregationInfo;
import com.wavemaker.runtime.file.model.Downloadable;

import com.newfebproject.wmstudio.CfgSkill;
import com.newfebproject.wmstudio.CfgSkillId;

/**
 * Service object for domain model class {@link CfgSkill}.
 */
public interface CfgSkillService {

    /**
     * Creates a new CfgSkill. It does cascade insert for all the children in a single transaction.
     *
     * This method overrides the input field values using Server side or database managed properties defined on CfgSkill if any.
     *
     * @param cfgSkill Details of the CfgSkill to be created; value cannot be null.
     * @return The newly created CfgSkill.
     */
	CfgSkill create(CfgSkill cfgSkill);


	/**
	 * Returns CfgSkill by given id if exists.
	 *
	 * @param cfgskillId The id of the CfgSkill to get; value cannot be null.
	 * @return CfgSkill associated with the given cfgskillId.
     * @throws EntityNotFoundException If no CfgSkill is found.
	 */
	CfgSkill getById(CfgSkillId cfgskillId) throws EntityNotFoundException;

    /**
	 * Find and return the CfgSkill by given id if exists, returns null otherwise.
	 *
	 * @param cfgskillId The id of the CfgSkill to get; value cannot be null.
	 * @return CfgSkill associated with the given cfgskillId.
	 */
	CfgSkill findById(CfgSkillId cfgskillId);


	/**
	 * Updates the details of an existing CfgSkill. It replaces all fields of the existing CfgSkill with the given cfgSkill.
	 *
     * This method overrides the input field values using Server side or database managed properties defined on CfgSkill if any.
     *
	 * @param cfgSkill The details of the CfgSkill to be updated; value cannot be null.
	 * @return The updated CfgSkill.
	 * @throws EntityNotFoundException if no CfgSkill is found with given input.
	 */
	CfgSkill update(CfgSkill cfgSkill) throws EntityNotFoundException;

    /**
	 * Deletes an existing CfgSkill with the given id.
	 *
	 * @param cfgskillId The id of the CfgSkill to be deleted; value cannot be null.
	 * @return The deleted CfgSkill.
	 * @throws EntityNotFoundException if no CfgSkill found with the given id.
	 */
	CfgSkill delete(CfgSkillId cfgskillId) throws EntityNotFoundException;

	/**
	 * Find all CfgSkills matching the given QueryFilter(s).
     * All the QueryFilter(s) are ANDed to filter the results.
     * This method returns Paginated results.
	 *
     * @deprecated Use {@link #findAll(String, Pageable)} instead.
	 *
     * @param queryFilters Array of queryFilters to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null returns all matching records.
     * @return Paginated list of matching CfgSkills.
     *
     * @see QueryFilter
     * @see Pageable
     * @see Page
	 */
    @Deprecated
	Page<CfgSkill> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Find all CfgSkills matching the given input query. This method returns Paginated results.
     * Note: Go through the documentation for <u>query</u> syntax.
	 *
     * @param query The query to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null returns all matching records.
     * @return Paginated list of matching CfgSkills.
     *
     * @see Pageable
     * @see Page
	 */
    Page<CfgSkill> findAll(String query, Pageable pageable);

    /**
	 * Exports all CfgSkills matching the given input query to the given exportType format.
     * Note: Go through the documentation for <u>query</u> syntax.
	 *
     * @param exportType The format in which to export the data; value cannot be null.
     * @param query The query to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @return The Downloadable file in given export type.
     *
     * @see Pageable
     * @see ExportType
     * @see Downloadable
	 */
    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the CfgSkills in the repository with matching query.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param query query to filter results. No filters applied if the input is null/empty.
	 * @return The count of the CfgSkill.
	 */
	long count(String query);

	/**
	 * Retrieve aggregated values with matching aggregation info.
     *
     * @param aggregationInfo info related to aggregations.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
	 * @return Paginated data with included fields.

     * @see AggregationInfo
     * @see Pageable
     * @see Page
	 */
	Page<Map<String, Object>> getAggregatedValues(AggregationInfo aggregationInfo, Pageable pageable);


}


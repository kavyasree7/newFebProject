/*Copyright (c) 2015-2016 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.newfebproject.wmstudio;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Tablewithoutpk generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`TABLEWITHOUTPK`", uniqueConstraints = {
        @UniqueConstraint(columnNames = {"`UNIQUE COLUMN`"})})
@IdClass(TablewithoutpkId.class)
public class Tablewithoutpk implements Serializable {

    private String idColumn;
    private String pkColumn;
    private String stringColumn;
    private String uniqueColumn;
    private String notNullColumn;
    private String defaultValueColumn;

    @Id
    @Column(name = "`ID COLUMN`", nullable = true, length = 20)
    public String getIdColumn() {
        return this.idColumn;
    }

    public void setIdColumn(String idColumn) {
        this.idColumn = idColumn;
    }

    @Id
    @Column(name = "`PK COLUMN`", nullable = true, length = 20)
    public String getPkColumn() {
        return this.pkColumn;
    }

    public void setPkColumn(String pkColumn) {
        this.pkColumn = pkColumn;
    }

    @Id
    @Column(name = "`STRING COLUMN`", nullable = true, length = 20)
    public String getStringColumn() {
        return this.stringColumn;
    }

    public void setStringColumn(String stringColumn) {
        this.stringColumn = stringColumn;
    }

    @Id
    @Column(name = "`UNIQUE COLUMN`", nullable = true, length = 20)
    public String getUniqueColumn() {
        return this.uniqueColumn;
    }

    public void setUniqueColumn(String uniqueColumn) {
        this.uniqueColumn = uniqueColumn;
    }

    @Id
    @Column(name = "`NOT NULL COLUMN`", nullable = false, length = 20)
    public String getNotNullColumn() {
        return this.notNullColumn;
    }

    public void setNotNullColumn(String notNullColumn) {
        this.notNullColumn = notNullColumn;
    }

    @Id
    @Column(name = "`DEFAULT VALUE COLUMN`", nullable = true, length = 20)
    public String getDefaultValueColumn() {
        return this.defaultValueColumn;
    }

    public void setDefaultValueColumn(String defaultValueColumn) {
        this.defaultValueColumn = defaultValueColumn;
    }



    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Tablewithoutpk)) return false;
        final Tablewithoutpk tablewithoutpk = (Tablewithoutpk) o;
        return Objects.equals(getIdColumn(), tablewithoutpk.getIdColumn()) &&
                Objects.equals(getPkColumn(), tablewithoutpk.getPkColumn()) &&
                Objects.equals(getStringColumn(), tablewithoutpk.getStringColumn()) &&
                Objects.equals(getUniqueColumn(), tablewithoutpk.getUniqueColumn()) &&
                Objects.equals(getNotNullColumn(), tablewithoutpk.getNotNullColumn()) &&
                Objects.equals(getDefaultValueColumn(), tablewithoutpk.getDefaultValueColumn());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getIdColumn(),
                getPkColumn(),
                getStringColumn(),
                getUniqueColumn(),
                getNotNullColumn(),
                getDefaultValueColumn());
    }
}


/*Copyright (c) 2015-2016 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.newfebproject.viewsdb;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

/**
 * UserDetailsOnlyUsername generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`UserDetails_OnlyUsername`", schema = "securityview")
public class UserDetailsOnlyUsername implements Serializable {

    private String userDetaId;
    private String userName;
    @JsonProperty(access = Access.READ_ONLY)
    private byte[] userPic;
    private Integer userId;
    private UsersOnlyUserId usersOnlyUserId;

    @Id
    @Column(name = "`UserDetaId`", nullable = false, length = 20)
    public String getUserDetaId() {
        return this.userDetaId;
    }

    public void setUserDetaId(String userDetaId) {
        this.userDetaId = userDetaId;
    }

    @Column(name = "`UserName`", nullable = true, length = 25)
    public String getUserName() {
        return this.userName;
    }

    public void setUserName(String userName) {
        this.userName = userName;
    }

    @Column(name = "`UserPic`", nullable = true)
    public byte[] getUserPic() {
        return this.userPic;
    }

    public void setUserPic(byte[] userPic) {
        this.userPic = userPic;
    }

    @Column(name = "`UserId`", nullable = true, scale = 0, precision = 10)
    public Integer getUserId() {
        return this.userId;
    }

    public void setUserId(Integer userId) {
        this.userId = userId;
    }

    
    
    public UsersOnlyUserId getUsersOnlyUserId() {
        return this.usersOnlyUserId;
    }

    public void setUsersOnlyUserId(UsersOnlyUserId usersOnlyUserId) {
        if(usersOnlyUserId != null) {
            this.userId = usersOnlyUserId.getUserId();
        }

        this.usersOnlyUserId = usersOnlyUserId;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof UserDetailsOnlyUsername)) return false;
        final UserDetailsOnlyUsername userDetailsOnlyUsername = (UserDetailsOnlyUsername) o;
        return Objects.equals(getUserDetaId(), userDetailsOnlyUsername.getUserDetaId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getUserDetaId());
    }
}


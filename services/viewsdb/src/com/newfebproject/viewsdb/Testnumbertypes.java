/*Copyright (c) 2015-2016 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.newfebproject.viewsdb;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.Table;

/**
 * Testnumbertypes generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`testnumbertypes`")
@IdClass(TestnumbertypesId.class)
public class Testnumbertypes implements Serializable {

    private BigDecimal deccol;
    private BigDecimal numericcol;
    private Double floatcol;
    private Float realcol;
    private Double doupcol;

    @Id
    @Column(name = "`deccol`", nullable = true, scale = 15, precision = 38)
    public BigDecimal getDeccol() {
        return this.deccol;
    }

    public void setDeccol(BigDecimal deccol) {
        this.deccol = deccol;
    }

    @Id
    @Column(name = "`numericcol`", nullable = true, scale = 15, precision = 38)
    public BigDecimal getNumericcol() {
        return this.numericcol;
    }

    public void setNumericcol(BigDecimal numericcol) {
        this.numericcol = numericcol;
    }

    @Id
    @Column(name = "`floatcol`", nullable = true, scale = 17, precision = 17)
    public Double getFloatcol() {
        return this.floatcol;
    }

    public void setFloatcol(Double floatcol) {
        this.floatcol = floatcol;
    }

    @Id
    @Column(name = "`realcol`", nullable = true, scale = 8, precision = 8)
    public Float getRealcol() {
        return this.realcol;
    }

    public void setRealcol(Float realcol) {
        this.realcol = realcol;
    }

    @Id
    @Column(name = "`doupcol`", nullable = true, scale = 17, precision = 17)
    public Double getDoupcol() {
        return this.doupcol;
    }

    public void setDoupcol(Double doupcol) {
        this.doupcol = doupcol;
    }



    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Testnumbertypes)) return false;
        final Testnumbertypes testnumbertypes = (Testnumbertypes) o;
        return Objects.equals(getDeccol(), testnumbertypes.getDeccol()) &&
                Objects.equals(getNumericcol(), testnumbertypes.getNumericcol()) &&
                Objects.equals(getFloatcol(), testnumbertypes.getFloatcol()) &&
                Objects.equals(getRealcol(), testnumbertypes.getRealcol()) &&
                Objects.equals(getDoupcol(), testnumbertypes.getDoupcol());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getDeccol(),
                getNumericcol(),
                getFloatcol(),
                getRealcol(),
                getDoupcol());
    }
}


/*Copyright (c) 2015-2016 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.newfebproject.kavyadb;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Hemanth generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`HEMANTH`", uniqueConstraints = {
        @UniqueConstraint(columnNames = {"`id`"})})
public class Hemanth implements Serializable {

    private Integer id;
    private Table7 table7;

    @Id
    @Column(name = "`id`", nullable = true, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }


    @OneToOne(fetch = FetchType.EAGER)
    
    public Table7 getTable7() {
        return this.table7;
    }

    public void setTable7(Table7 table7) {
        if(table7 != null) {
            this.id = table7.getId();
        }

        this.table7 = table7;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Hemanth)) return false;
        final Hemanth hemanth = (Hemanth) o;
        return Objects.equals(getId(), hemanth.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}


/*Copyright (c) 2015-2016 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.newfebproject.adventureworks2014;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

import org.hibernate.annotations.Type;
import org.joda.time.LocalDateTime;

/**
 * AwbuildVersion generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`AWBuildVersion`", schema = "dbo")
public class AwbuildVersion implements Serializable {

    private Short systemInformationId;
    private String databaseVersion;
    @Type(type = "DateTime")
    private LocalDateTime versionDate;
    @Type(type = "DateTime")
    private LocalDateTime modifiedDate;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`SystemInformationID`", nullable = false, scale = 0, precision = 3)
    public Short getSystemInformationId() {
        return this.systemInformationId;
    }

    public void setSystemInformationId(Short systemInformationId) {
        this.systemInformationId = systemInformationId;
    }

    @Column(name = "`Database Version`", nullable = false, length = 25)
    public String getDatabaseVersion() {
        return this.databaseVersion;
    }

    public void setDatabaseVersion(String databaseVersion) {
        this.databaseVersion = databaseVersion;
    }

    @Column(name = "`VersionDate`", nullable = false)
    public LocalDateTime getVersionDate() {
        return this.versionDate;
    }

    public void setVersionDate(LocalDateTime versionDate) {
        this.versionDate = versionDate;
    }

    @Column(name = "`ModifiedDate`", nullable = false)
    public LocalDateTime getModifiedDate() {
        return this.modifiedDate;
    }

    public void setModifiedDate(LocalDateTime modifiedDate) {
        this.modifiedDate = modifiedDate;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof AwbuildVersion)) return false;
        final AwbuildVersion awbuildVersion = (AwbuildVersion) o;
        return Objects.equals(getSystemInformationId(), awbuildVersion.getSystemInformationId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getSystemInformationId());
    }
}

